/**
 * SISTEMA DE BOTONES INTELIGENTES (Quick Actions)
 *
 * Configuraci√≥n completa de botones contextuales que aparecen despu√©s de
 * respuestas breves desde cache.
 */

// ============================================================================
// TIPOS
// ============================================================================

export type QuickActionType = 'message' | 'url';

export interface QuickActionButton {
  emoji: string;
  label: string;
  type: QuickActionType;
  action: string; // Mensaje a enviar O URL a abrir
}

export interface QuickActionsConfig {
  buttons: QuickActionButton[];
}

export interface TopicConfig {
  keywords: string[];
  category: 'groups' | 'sacraments' | 'schedules' | 'location';
  dynamicButton: QuickActionButton;
}

// ============================================================================
// BOT√ìN FIJO (siempre presente cuando aplique)
// ============================================================================

export const FIXED_BUTTON: QuickActionButton = {
  emoji: 'üìñ',
  label: 'Ver m√°s informaci√≥n',
  type: 'message',
  action: 'Dame informaci√≥n detallada sobre esto',
};

// ============================================================================
// BOTONES DIN√ÅMICOS (seg√∫n categor√≠a)
// ============================================================================

const DYNAMIC_BUTTONS = {
  groups: {
    emoji: 'üìù',
    label: 'Inscribirme',
    type: 'url' as QuickActionType,
    action: 'https://form.typeform.com/to/eiNEOWby',
  },
  sacraments: {
    emoji: 'üìã',
    label: 'Ver requisitos',
    type: 'message' as QuickActionType,
    action: '¬øQu√© documentos necesito?',
  },
  schedules: {
    emoji: 'üìÖ',
    label: 'Ver horarios completos',
    type: 'message' as QuickActionType,
    action: 'Dame todos los horarios',
  },
  location: {
    emoji: 'üìç',
    label: '¬øD√≥nde est√°?',
    type: 'message' as QuickActionType,
    action: '¬øCu√°l es la ubicaci√≥n y horarios de contacto?',
  },
};

// ============================================================================
// MAPEO DE TEMAS ‚Üí CATEGOR√çAS
// ============================================================================

export const TOPIC_MAPPINGS: TopicConfig[] = [
  // ========== GRUPOS JUVENILES ==========
  {
    keywords: [
      'eloos',
      'elos',
      'grupo de j√≥venes',
      'grupo jovenes',
      'entrega',
      'superaci√≥n',
      'superacion',
      'eloos entrega',
      'eloos superaci√≥n',
    ],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },
  {
    keywords: ['edge', 'adolescentes', 'middle school'],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },
  {
    keywords: ['lifeteen', 'life teen', 'high school'],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },
  {
    keywords: ['mies', 'jovenes mies'],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },
  {
    keywords: ['el pozo', 'pozo'],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },
  {
    keywords: ['bartimeo', 'bartolom√©'],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },

  // ========== GRUPOS ADULTOS ==========
  {
    keywords: ['dalmanuta'],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },
  {
    keywords: ['oro y caf√©', 'oro y cafe', 'oro cafe'],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },
  {
    keywords: [
      'oraci√≥n de las madres',
      'oracion de las madres',
      'oraci√≥n madres',
      'oracion madres',
    ],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },

  // ========== CATEQUESIS ==========
  {
    keywords: [
      'catequesis',
      'catecismo',
      'primera comuni√≥n',
      'primera comunion',
      'catequesis de infancia',
      'catequesis infancia',
      'catecumenado',
      'catecumenado adultos',
    ],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },

  // ========== TALLERES ==========
  {
    keywords: [
      'taller solidario',
      'taller san juan',
      'taller san juan evangelista',
    ],
    category: 'groups',
    dynamicButton: DYNAMIC_BUTTONS.groups,
  },

  // ========== SACRAMENTOS ==========
  {
    keywords: ['bautismo', 'bautizo', 'bautizar'],
    category: 'sacraments',
    dynamicButton: DYNAMIC_BUTTONS.sacraments,
  },
  {
    keywords: ['matrimonio', 'boda', 'casarse', 'casamiento'],
    category: 'sacraments',
    dynamicButton: DYNAMIC_BUTTONS.sacraments,
  },
  {
    keywords: ['confirmaci√≥n', 'confirmacion', 'confirmar'],
    category: 'sacraments',
    dynamicButton: DYNAMIC_BUTTONS.sacraments,
  },

  // ========== HORARIOS ==========
  {
    keywords: [
      'misa',
      'misas',
      'horario misa',
      'horarios misas',
      'calendario',
      'calendario parroquial',
    ],
    category: 'schedules',
    dynamicButton: DYNAMIC_BUTTONS.schedules,
  },

  // ========== UBICACIONES/CONTACTO ==========
  {
    keywords: [
      'c√°ritas',
      'caritas',
      'donde esta caritas',
      'donde est√° c√°ritas',
      'ubicacion caritas',
      'ubicaci√≥n c√°ritas',
    ],
    category: 'location',
    dynamicButton: DYNAMIC_BUTTONS.location,
  },
  {
    keywords: [
      'parroquia',
      'transfiguraci√≥n',
      'transfiguracion',
      'soledad',
      'donde esta',
      'donde est√°',
      'direcci√≥n',
      'direccion',
    ],
    category: 'location',
    dynamicButton: DYNAMIC_BUTTONS.location,
  },
];

// ============================================================================
// FUNCI√ìN DE DETECCI√ìN DE TEMA
// ============================================================================

/**
 * Detecta el tema principal en una respuesta del cache y retorna los botones apropiados.
 *
 * @param message - Mensaje original del usuario
 * @param response - Respuesta generada desde cache
 * @returns QuickActionsConfig o null si no se detecta tema
 */
export function detectQuickActions(
  message: string,
  response: string
): QuickActionsConfig | null {
  const lowerMessage = message.toLowerCase();
  const lowerResponse = response.toLowerCase();

  // Combinar mensaje + respuesta para mejor detecci√≥n
  const combinedText = `${lowerMessage} ${lowerResponse}`;

  // Buscar coincidencias en los mappings
  for (const topicConfig of TOPIC_MAPPINGS) {
    const hasMatch = topicConfig.keywords.some((keyword) =>
      combinedText.includes(keyword.toLowerCase())
    );

    if (hasMatch) {
      // Retornar bot√≥n fijo + bot√≥n din√°mico
      return {
        buttons: [FIXED_BUTTON, topicConfig.dynamicButton],
      };
    }
  }

  // No se detect√≥ tema espec√≠fico ‚Üí no mostrar botones
  return null;
}

// ============================================================================
// REGLAS DE VALIDACI√ìN
// ============================================================================

/**
 * Valida si una respuesta debe mostrar Quick Actions.
 *
 * Criterios:
 * - Respuesta viene de cache
 * - Respuesta corta (< 150 palabras)
 * - Tema identificable
 * - No es respuesta gen√©rica (saludo, agradecimiento)
 *
 * @param response - Respuesta generada
 * @param fromCache - Si viene desde cache
 * @returns true si debe mostrar botones
 */
export function shouldShowQuickActions(
  response: string,
  fromCache: boolean
): boolean {
  // Regla 1: Debe venir de cache
  if (!fromCache) {
    return false;
  }

  // Regla 2: Debe ser respuesta corta (< 150 palabras)
  const wordCount = response.split(/\s+/).length;
  if (wordCount > 150) {
    return false;
  }

  // Regla 3: No debe ser respuesta gen√©rica
  const genericPatterns = [
    /^(hola|buenos d√≠as|buenas tardes|buenas noches)/i,
    /^(gracias|muchas gracias|vale|ok|de acuerdo)/i,
    /^(adi√≥s|hasta luego|nos vemos)/i,
  ];

  const isGeneric = genericPatterns.some((pattern) => pattern.test(response));
  if (isGeneric) {
    return false;
  }

  return true;
}
